#version 450

struct Particle
{
	vec3 v0;
	vec3 v1;
	vec3 v2;
	vec3 velocity;
	
	vec2 t0;
	vec2 t1;
	vec2 t2;
	
	float mass;
};

// Binding 0 : Position storage buffer
layout(std430, binding = 0) buffer Pos 
{
   Particle particles[ ];
};

layout (local_size_x = 4) in;

void main() 
{
    uint index = gl_GlobalInvocationID.x;
	
	float gravityAcceleration=9.81;
	float deltaT= 0.01f;
	
	vec3 gravityForce= vec3(0.0, -gravityAcceleration, 0.0);	
	particles[index].velocity  +=  gravityForce * deltaT;

    vec3 offset = particles[index].velocity * deltaT;


    particles[index].v0 += offset;
	particles[index].v1 += offset;
	particles[index].v2 += offset;
	  
	 float floorHeight=-1.0;
	if (particles[index].v0.y < floorHeight || particles[index].v1.y < floorHeight || particles[index].v2.y < floorHeight)
	{
		particles[index].velocity=vec3(0.0);
		
		particles[index].v0.y=max(floorHeight,  particles[index].v0.y);
		particles[index].v1.y=max(floorHeight,  particles[index].v1.y);
		particles[index].v2.y=max(floorHeight,  particles[index].v2.y);
	}
	
	
	   
}

